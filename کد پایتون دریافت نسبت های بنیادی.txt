import pandas as pd
import pytse_client as tse
import xlsxwriter
from concurrent.futures import ThreadPoolExecutor, as_completed
import time

def get_ticker_data(symbol):
    try:
        ticker = tse.Ticker(symbol)
        current_df = ticker.shareholders.copy()
        
        if not isinstance(current_df, pd.DataFrame):
            current_df = pd.DataFrame(current_df)
        
        current_df.rename(columns={"percentage": "shareholder_percentage"}, inplace=True)
        
        if current_df['shareholder_percentage'].dtype == object:
            current_df['shareholder_percentage'] = current_df['shareholder_percentage'].str.replace(',', '')
        current_df['shareholder_percentage'] = pd.to_numeric(current_df['shareholder_percentage'], 
                                                          errors='coerce').fillna(0)
        
        free_float = round(100 - current_df['shareholder_percentage'].sum(), 2)
        
        p_e = round(ticker.p_e_ratio, 2) if ticker.p_e_ratio is not None else None
        psr = round(ticker.psr, 2) if ticker.psr is not None else None
        p_s = round(ticker.p_s_ratio, 2) if ticker.p_s_ratio is not None else None
        
        nav = ticker.nav if hasattr(ticker, 'nav') and ticker.nav is not None else None
        
        # گرفتن قیمت پایانی تعدیل‌شده
        adj_close = ticker.adj_close if ticker.adj_close is not None else None
        
        p_to_nav = None
        if nav is not None and adj_close is not None and nav != 0:
            p_to_nav = round((adj_close / nav) * 100, 2)
        
        return (
            symbol,
            free_float,
            ticker.eps,
            p_e,
            ticker.group_p_e_ratio,
            psr,
            p_s,
            ticker.flow,
            ticker.total_shares,
            ticker.market_cap,
            nav,
            p_to_nav
        )
    
    except Exception:
        print(f"نماد {symbol}: داده‌ها موجود نیست")
        return (symbol, None, None, None, None, None, None, None, None, None, None, None)

def calculate_total_free_float(symbols_list):
    batch_size = 50
    max_workers = 5
    results = []
    
    for i in range(0, len(symbols_list), batch_size):
        batch = symbols_list[i:i + batch_size]
        print(f"پردازش دسته‌ای از نمادها: {i+1} تا {i+len(batch)}")
        
        with ThreadPoolExecutor(max_workers=max_workers) as executor:
            future_to_symbol = {executor.submit(get_ticker_data, symbol): symbol for symbol in batch}
            for future in as_completed(future_to_symbol):
                sym = future_to_symbol[future]
                try:
                    result = future.result()
                    results.append(result)
                except Exception:
                    print(f"نماد {sym}: داده‌ها موجود نیست")
        
        time.sleep(2)
    
    df = pd.DataFrame(results, columns=[
        'نماد', 'درصد شناوری', 'EPS', 'P/E', 'گروه P/E', 'PSR', 'P/S', 'عنوان بازار', 'تعداد سهام', 'ارزش بازار', 'NAV', 'P/NAV'
    ])
    
    # تعداد سهام شرکت به میلیون سهم
    df['تعداد سهام'] = round(df['تعداد سهام'] / 1_000_000, 2)
    
    # ارزش بازار به میلیارد تومان
    df['ارزش بازار'] = round(df['ارزش بازار'] / 10_000_000_000, 2)
    
    valid_df = df.dropna(subset=['درصد شناوری'])
    total_free_float = valid_df['درصد شناوری'].sum()
    
    return valid_df, total_free_float

symbols = [
    "آباد",
    "آبادا",
    "آبین",
    "آپ",
    "آرمان",
    "آریا",
    "آریان",
    "آ س پ",
    "آسیا",
    "آلومینا",
    "آوا",
    "آوند",
    "اپال",
    "اپرداز",
    "اتکاسا",
    "اتکام",
    "اتکای",
    "اخابر",
    "اردستان",
    "ارزش مسکن",
    "ارفع",
    "ارمغان",
    "استقلال",
    "اسیاتک",
    "اطلس",
    "اعتبار",
    "اعتلا",
    "افرا",
    "افق",
    "البرز",
    "امید",
    "امین",
    "انتخاب",
    "انرژی",
    "اوان",
    "اهرم",
    "بازرگام",
    "بالبر",
    "بایکا",
    "بپاس",
    "بپیوند",
    "بترانس",
    "بتک",
    "بتهران",
    "بجهرم",
    "بخاور",
    "برکت",
    "بزاگرس",
    "بساما",
    "بسویچ",
    "بشهاب",
    "بفجر",
    "بکاب",
    "بکابل",
    "بکام",
    "بکهنوج",
    "بگیلان",
    "بمپنا",
    "بموتو",
    "بمولد",
    "بمیلا",
    "بنو",
    "بنیرو",
    "بورس",
    "بوعلی",
    "بهیر",
    "پارتا",
    "پارس",
    "پارسان",
    "پارسیان",
    "پاسا",
    "پاکشو",
    "پالایش",
    "پتایر",
    "پترول",
    "پخش",
    "پدرخش",
    "پرداخت",
    "پردیس",
    "پرسپولیس",
    "پسهند",
    "پشاهن",
    "پکرمان",
    "پکویر",
    "پلاست",
    "پلاسک",
    "پلوله",
    "پی پاد",
    "پیزد",
    "تابا",
    "تاپکیش",
    "تاپیکو",
    "تاتمس",
    "تاصیکو",
    "تایرا",
    "تبرک",
    "تپسی",
    "تپکو",
    "تپمپی",
    "تپولا",
    "تجلی",
    "تشتاد",
    "تفارس",
    "تفیرو",
    "تکاردان",
    "تکشا",
    "تکمبا",
    "تکنار",
    "تکنو",
    "تکیمیا",
    "تلیسه",
    "تماوند",
    "تمحرکه",
    "تملت",
    "تنوین",
    "توان",
    "توریل",
    "توسن",
    "تیپیکو",
    "ثاخت",
    "ثاژن",
    "ثاصفا",
    "ثالوند",
    "ثامان",
    "ثامید",
    "ثبات",
    "ثباغ",
    "ثبهساز",
    "ثپردیس",
    "ثتران",
    "ثتوسا",
    "ثجنوب",
    "ثجوان",
    "ثرود",
    "ثشاهد",
    "ثشرق",
    "ثعتما",
    "ثعمرا",
    "ثغرب",
    "ثفارس",
    "ثقزوی",
    "ثمسکن",
    "ثنام",
    "ثنور",
    "ثنوسا",
    "جم",
    "جم پیلن",
    "جواهر",
    "جوین",
    "جهرم",
    "جهش",
    "چافست",
    "چخزر",
    "چدن",
    "چفیبر",
    "چکاپا",
    "چکارن",
    "چکاوه",
    "چنوپا",
    "حآسا",
    "حآفرین",
    "حاریا",
    "حبندر",
    "حپترو",
    "حپرتو",
    "حتاید",
    "حتوکا",
    "حخزر",
    "حرهشا",
    "حریل",
    "حسیر",
    "حسینا",
    "حشکوه",
    "حفارس",
    "حفاری",
    "حکشتی",
    "حگهر",
    "خاذین",
    "خاور",
    "خاهن",
    "خبنیان",
    "خبهمن",
    "خپارس",
    "خپویش",
    "ختراک",
    "ختور",
    "ختوقا",
    "خچرخش",
    "خدیزل",
    "خراسان",
    "خریخت",
    "خرینگ",
    "خزامیا",
    "خزر",
    "خساپا",
    "خشرق",
    "خصدرا",
    "خعمرا",
    "خفناور",
    "خفنر",
    "خفولا",
    "خکار",
    "خکاوه",
    "خکرمان",
    "خکمک",
    "خگستر",
    "خلنت",
    "خلیبل",
    "خمحرکه",
    "خمحور",
    "خموتور",
    "خمهر",
    "خنصیر",
    "خودرو",
    "خودکفا",
    "خوساز",
    "دابور",
    "داتام",
    "دارا",
    "داراب",
    "دارا یکم",
    "دارو",
    "داسوه",
    "دالبر",
    "دامین",
    "دانا",
    "دانیک",
    "داوه",
    "دبالک",
    "دپارس",
    "دتماد",
    "دتوزیع",
    "دتولید",
    "دتهران",
    "دجابر",
    "ددام",
    "ددانا",
    "درازک",
    "درازی",
    "دروز",
    "درهآور",
    "دزهراوی",
    "دسانکو",
    "دسبحا",
    "دسبحان",
    "دسینا",
    "دشیری",
    "دشیمی",
    "دعبید",
    "دفارا",
    "دفرا",
    "دقاضی",
    "دکپسول",
    "دکوثر",
    "دکیمی",
    "دلر",
    "دلقما",
    "دماوند",
    "دهدشت",
    "دی",
    "دیران",
    "ذوب",
    "رافزا",
    "رانفور",
    "رتاپ",
    "رتکو",
    "رکیش",
    "رمپنا",
    "رنیک",
    "ریشمک",
    "زاگرس",
    "زبینا",
    "زپارس",
    "زدشت",
    "زر",
    "زرفام",
    "زشریف",
    "زشگزا",
    "زفجر",
    "زفکا",
    "زقیام",
    "زکشت",
    "زکوثر",
    "زگلدشت",
    "زماهان",
    "زمگسا",
    "زملارد",
    "زنجان",
    "زنگان",
    "زیتون",
    "سآبیک",
    "ساحل",
    "ساذری",
    "ساراب",
    "ساربیل",
    "ساروج",
    "ساروم",
    "سام",
    "سامان",
    "ساوه",
    "سایرا",
    "ساینا",
    "سباقر",
    "سبجنو",
    "سبزوا",
    "سبهان",
    "سپ",
    "سپاها",
    "سپرمی",
    "سپید",
    "سپیدار",
    "ستران",
    "سجام",
    "سخاش",
    "سخزر",
    "سخند",
    "سخواف",
    "سخوز",
    "سدبیر",
    "سدشت",
    "سدور",
    "سرو",
    "سرود",
    "سشرق",
    "سشمال",
    "سصفها",
    "سصوفی",
    "سغدیر",
    "سغرب",
    "سفار",
    "سفارس",
    "سفارود",
    "سفاسی",
    "سفاسیت",
    "سفانو",
    "سقاین",
    "سکارون",
    "سکرد",
    "سکرما",
    "سلام",
    "سمازن",
    "سمان",
    "سمایه",
    "سمتاز",
    "سمگا",
    "سنیر",
    "سهرمز",
    "سهگمت",
    "سیتا",
    "سیدکو",
    "سیستم",
    "سیلام",
    "سیمرغ",
    "سیناد",
    "شاراک",
    "شاروم",
    "شاملا",
    "شاوان",
    "شبریز",
    "شبصیر",
    "شبندر",
    "شبهرن",
    "شپارس",
    "شپاس",
    "شپاکسا",
    "شپترو",
    "شپدیس",
    "شپلی",
    "شپنا",
    "شتاب",
    "شتران",
    "شتوکا",
    "شتولی",
    "شتهران",
    "شجم",
    "شخارک",
    "شدوص",
    "شراز",
    "شرانل",
    "شرنگی",
    "شزنگ",
    "شساخت",
    "شسپا",
    "شستا",
    "شستان",
    "شسم",
    "شسینا",
    "شصدف",
    "شصفها",
    "شغدیر",
    "شفا",
    "شفارا",
    "شفارس",
    "شفن",
    "شکام",
    "شکبیر",
    "شکربن",
    "شکف",
    "شکلر",
    "شگل",
    "شگویا",
    "شلرد",
    "شلعاب",
    "شملی",
    "شمواد",
    "شنفت",
    "شوینده",
    "شهر",
    "شیراز",
    "شیران",
    "صبا",
    "صنوین",
    "طلا",
    "عالیس",
    "عیار",
    "غاذر",
    "غالبر",
    "غبشهر",
    "غبهار",
    "غبهنوش",
    "غپآذر",
    "غپاک",
    "غپونه",
    "غپینو",
    "غچین",
    "غدام",
    "غدانه",
    "غدشت",
    "غدیس",
    "غزر",
    "غسالم",
    "غشاذر",
    "غشان",
    "غشصفا",
    "غشوکو",
    "غشهد",
    "غشهداب",
    "غصینو",
    "غفارس",
    "غکورش",
    "غگرجی",
    "غگل",
    "غگلپا",
    "غگلستا",
    "غگیلا",
    "غمارگ",
    "غمایه",
    "غمهرا",
    "غمینو",
    "غناب",
    "غنوش",
    "غنیلی",
    "غویتا",
    "غیوان",
    "فاخر",
    "فاذر",
    "فاراک",
    "فارس",
    "فاسمین",
    "فافزا",
    "فافق",
    "فالوم",
    "فاما",
    "فاهواز",
    "فایرا",
    "فباهنر",
    "فبستم",
    "فبیرا",
    "فپنتا",
    "فتوسا",
    "فجام",
    "فجر",
    "فجوش",
    "فجهان",
    "فخاس",
    "فخوز",
    "فرآور",
    "فرابورس",
    "فرود",
    "فروس",
    "فروسیل",
    "فروی",
    "فزر",
    "فزرین",
    "فسا",
    "فسازان",
    "فسبزوار",
    "فسپا",
    "فسدید",
    "فسرب",
    "فسلیر",
    "فسوژ",
    "فصبا",
    "فغدیر",
    "فکمند",
    "فگستر",
    "فلات",
    "فلامی",
    "فلوله",
    "فماک",
    "فمراد",
    "فملی",
    "فن آوا",
    "فن افزار",
    "فنرژی",
    "فنفت",
    "فنوال",
    "فنورد",
    "فوکا",
    "فولاد",
    "فولاژ",
    "فولای",
    "قاروم",
    "قاسم",
    "قپیرا",
    "قتربت",
    "قثابت",
    "قجام",
    "قچار",
    "قرن",
    "قزوین",
    "قشرین",
    "قشکر",
    "قشهد",
    "قشیر",
    "قصفها",
    "قلرست",
    "قمرو",
    "قنقش",
    "قنیشا",
    "قهکمت",
    "قیستو",
    "کابگن",
    "کاذر",
    "کارام",
    "کاریز",
    "کازرو",
    "کاسپین",
    "کالا",
    "کاما",
    "کاوه",
    "کایتا",
    "کایزد",
    "کباده",
    "کبافق",
    "کبورس",
    "کپارس",
    "کپرور",
    "کپشیر",
    "کترام",
    "کتوسعه",
    "کتوکا",
    "کچاد",
    "کحافظ",
    "کخاک",
    "کدما",
    "کرازی",
    "کرماشا",
    "کرمان",
    "کرومیت",
    "کروی",
    "کزغال",
    "کساپا",
    "کساوه",
    "کسرا",
    "کسرام",
    "کسعدی",
    "کشرق",
    "کصدف",
    "کطبس",
    "کفپارس",
    "کفرآور",
    "کفرا",
    "کقزوی",
    "کگاز",
    "کگل",
    "کگهر",
    "کلر",
    "کلوند",
    "کماسه",
    "کمنگنز",
    "کمینا",
    "کنور",
    "کوثر",
    "کورز",
    "کویر",
    "کهرام",
    "کهربا",
    "کهمدا",
    "کیا",
    "کی بی سی",
    "کیسون",
    "کیمیا",
    "کیمیاتک",
    "گپارس",
    "گدنا",
    "گشان",
    "گکوثر",
    "گکیش",
    "گلدیرا",
    "گنج",
    "گنگین",
    "گوهر",
    "گوهران",
    "لابسا",
    "لازما",
    "لبوتان",
    "لپارس",
    "لپیام",
    "لخانه",
    "لخزر",
    "لسرما",
    "لطیف",
    "لکما",
    "لوتوس",
    "ما",
    "مادیرا",
    "مارون",
    "مبین",
    "مثقال",
    "مداران",
    "مدیر",
    "مدیریت",
    "مرقام",
    "معیار",
    "مفاخر",
    "ملت",
    "ممسنی",
    "موج",
    "میدکو",
    "میهن",
    "ناما",
    "نبروج",
    "نتوس",
    "نطرین",
    "نمرینو",
    "نوری",
    "نوین",
    "نیان",
    "نیرو",
    "وآذر",
    "وآرین",
    "وآفر",
    "وآفری",
    "وآوا",
    "وآیند",
    "واتی",
    "واحصا",
    "واحیا",
    "واعتبار",
    "والبر",
    "والماس",
    "وامید",
    "وامیر",
    "وامین",
    "وایرا",
    "وایران",
    "وبانک",
    "وبرق",
    "وبشهر",
    "وبصادر",
    "وبملت",
    "وبوعلی",
    "وبهمن",
    "وبیمه",
    "وپارس",
    "وپاسار",
    "وپترو",
    "وپخش",
    "وپسا",
    "وپست",
    "وپویا",
    "وتجارت",
    "وتعاون",
    "وتوس",
    "وتوسکا",
    "وتوسم",
    "وتوشه",
    "وتوصا",
    "وتوکا",
    "وثخوز",
    "وثوق",
    "وجامی",
    "وحافظ",
    "وحکمت",
    "وخارزم",
    "وخاور",
    "ودانا",
    "ودی",
    "ورازی",
    "ورنا",
    "وزمین",
    "وساپا",
    "وساخت",
    "وسالت",
    "وسبحان",
    "وسپه",
    "وسپهر",
    "وسدید",
    "وسرمد",
    "وسکاب",
    "وسنا",
    "وسین",
    "وسینا",
    "وشمال",
    "وشهر",
    "وصنا",
    "وصندوق",
    "وصنعت",
    "وطوبی",
    "وغدیر",
    "وفتخار",
    "وفردا",
    "وکادو",
    "وکار",
    "وکبهمن",
    "وکغدیر",
    "وگردش",
    "وگستر",
    "ولبهمن",
    "ولپارس",
    "ولتجار",
    "ولراز",
    "ولساپا",
    "ولشرق",
    "ولصنم",
    "ولغدر",
    "ولقمان",
    "ولکار",
    "ولملت",
    "ولیز",
    "ومدیر",
    "ومشان",
    "ومعادن",
    "ومعلم",
    "وملت",
    "وملی",
    "ومهان",
    "ونفت",
    "ونوین",
    "ونیرو",
    "ونیکی",
    "وهامون",
    "وهنر",
    "وهور",
    "ویسا",
    "های وب",
    "هجرت",
    "هرمز",
    "همراه"
]

symbols = list(dict.fromkeys(symbols))
print(f"تعداد نمادها: {len(symbols)}")

result_df, total_free_float = calculate_total_free_float(symbols)

print(f"مجموع درصد شناوری کل نمادها: {total_free_float:.2f}%")
print("\nجزئیات داده‌های هر نماد:")
print(result_df)

output_file = "total_free_float_summary.xlsx"
with pd.ExcelWriter(output_file, engine='xlsxwriter') as writer:
    result_df.to_excel(writer, sheet_name='Sheet1', index=False, startrow=1, header=False)
    
    workbook = writer.book
    worksheet = writer.sheets['Sheet1']
    
    # تنظیم عرض ستون‌ها
    worksheet.set_column('A:A', 15)  # نماد
    worksheet.set_column('B:B', 20)  # درصد شناوری
    worksheet.set_column('C:C', 15)  # EPS
    worksheet.set_column('D:D', 15)  # P/E
    worksheet.set_column('E:E', 15)  # گروه P/E
    worksheet.set_column('F:F', 15)  # PSR
    worksheet.set_column('G:G', 15)  # P/S
    worksheet.set_column('H:H', 20)  # عنوان بازار
    worksheet.set_column('I:I', 20)  # تعداد سهام
    worksheet.set_column('J:J', 20)  # ارزش بازار
    worksheet.set_column('K:K', 15)  # NAV
    worksheet.set_column('L:L', 15)  # P/NAV
    
    header_format = workbook.add_format({'bold': True, 'align': 'center', 'valign': 'vcenter', 'fg_color': '#D7E4BC'})
    headers = ['نماد', 'درصد شناوری', 'EPS', 'P/E', 'گروه P/E', 'PSR', 'P/S', 'عنوان بازار', 'تعداد سهام', 'ارزش بازار', 'NAV', 'P/NAV']
    for col, header in enumerate(headers):
        worksheet.write(0, col, header, header_format)
    
    table_range = f'A1:L{len(result_df) + 1}'
    worksheet.add_table(table_range, {
        'columns': [{'header': h} for h in headers],
        'style': 'Table Style Medium 9',
        'name': 'TickerDataTable'
    })
    
    total_row = len(result_df) + 3
    total_format = workbook.add_format({'bold': True, 'align': 'right'})
    worksheet.write(total_row - 1, 0, "مجموع درصد شناوری کل نمادها", total_format)
    worksheet.write(total_row - 1, 1, total_free_float)

print(f"نتایج در فایل {output_file} ذخیره شد.")
